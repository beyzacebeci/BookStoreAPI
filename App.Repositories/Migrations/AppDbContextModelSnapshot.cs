// <auto-generated />
using System;
using App.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App.Repositories.Books.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("integer");

                    b.Property<int>("StockQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Fyodor Dostoyevski",
                            CategoryId = 1,
                            ISBN = "9789750719387",
                            IsDeleted = false,
                            Price = 49.99m,
                            PublicationYear = 1866,
                            StockQuantity = 50,
                            Title = "Suç ve Ceza"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Frank Herbert",
                            CategoryId = 2,
                            ISBN = "9789753421851",
                            IsDeleted = false,
                            Price = 59.99m,
                            PublicationYear = 1965,
                            StockQuantity = 30,
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Mustafa Kemal Atatürk",
                            CategoryId = 3,
                            ISBN = "9789944885348",
                            IsDeleted = false,
                            Price = 69.99m,
                            PublicationYear = 1927,
                            StockQuantity = 40,
                            Title = "Nutuk"
                        });
                });

            modelBuilder.Entity("App.Repositories.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Roman"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Bilim Kurgu"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Tarih"
                        });
                });

            modelBuilder.Entity("App.Repositories.OrderItems.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId", "BookId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            IsDeleted = false,
                            OrderId = 1,
                            Quantity = 2,
                            UnitPrice = 49.99m
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            IsDeleted = false,
                            OrderId = 2,
                            Quantity = 1,
                            UnitPrice = 59.99m
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            IsDeleted = false,
                            OrderId = 3,
                            Quantity = 3,
                            UnitPrice = 69.99m
                        });
                });

            modelBuilder.Entity("App.Repositories.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 3, 15, 10, 30, 0, 0, DateTimeKind.Utc),
                            Status = "COMPLETED",
                            TotalPrice = 99.98m
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 3, 16, 14, 45, 0, 0, DateTimeKind.Utc),
                            Status = "PENDING",
                            TotalPrice = 59.99m
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 3, 17, 9, 15, 0, 0, DateTimeKind.Utc),
                            Status = "COMPLETED",
                            TotalPrice = 209.97m
                        });
                });

            modelBuilder.Entity("App.Repositories.Books.Book", b =>
                {
                    b.HasOne("App.Repositories.Categories.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("App.Repositories.OrderItems.OrderItem", b =>
                {
                    b.HasOne("App.Repositories.Books.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Repositories.Orders.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("App.Repositories.Orders.Order", b =>
                {
                    b.HasOne("App.Repositories.Books.Book", null)
                        .WithMany("Orders")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("App.Repositories.Books.Book", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("App.Repositories.Categories.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("App.Repositories.Orders.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
